AIM: 

To implement a DNS server and client in java using UDP sockets. 
DESCRIPTION: 
DNS stands for domain name system. Unique name of the host is identified with its IP address through 
server client communication. 

ALGORITHM:  

Server  
1. Create an array of hosts and its ip address in another array  
2. Create a datagram socket and bind it to a port  
3. Create a datagram packet to receive client request 
4. Read the domain name from client to be resolved  
5. Lookup the host array for the domain name  
6. If found then retrieve corresponding address 
7. Create a datagram packet and send ip address to client  
8. Repeat steps 3-7 to resolve further requests from clients 
9. Close the server socket  
10. Stop 
Client  
1. Create a datagram socket 
2. Get domain name from user  
3. Create a datagram packet and send domain name to the server 
4. Create a datagram packet to receive server message 
5. Read server's response  
6. If ip address then display it else display "Domain does not exist" 
7. Close the client socket  
8.Stop 
 
 
Program: 

Client: 

import java.io.*; 
import java.net.*; 
import java.util.*; 
class Clientdns12 
{ 
            public static void main(String args[]) 
            { 
            try 
            { 
                        DatagramSocket client=new DatagramSocket(); 
                        InetAddress addr=InetAddress.getByName("127.0.0.1"); 
 
                        byte[] sendbyte=new byte[1024]; 
                        byte[] receivebyte=new byte[1024]; 
                        BufferedReader in=new BufferedReader(new InputStreamReader(System.in)); 
                        System.out.println("Enter the DOMAIN NAME or IP adress:"); 
                        String str=in.readLine(); 
                        sendbyte=str.getBytes(); 
                        DatagramPacket sender=new DatagramPacket(sendbyte,sendbyte.length,addr,1309); 
                        client.send(sender); 
                        DatagramPacket receiver=new DatagramPacket(receivebyte,receivebyte.length); 
                        client.receive(receiver); 
                        String s=new String(receiver.getData()); 
                        System.out.println("IP address or DOMAIN NAME: "+s.trim());    
                        client.close(); 
            } 
            catch(Exception e) 
            { 
                        System.out.println(e); 
            } 
            } 
} 
Server: 

import java.io.*; 
import java.net.*; 
import java.util.*; 
class Serverdns12 
{ 
            public static void main(String args[]) 
            { 
            try 
            { 
                        DatagramSocket server=new DatagramSocket(1309); 
                        while(true) 
                        { 
                                    byte[] sendbyte=new byte[1024]; 
                                    byte[] receivebyte=new byte[1024]; 
                                    DatagramPacket receiver=new DatagramPacket(receivebyte,receivebyte.length); 
                                    server.receive(receiver); 
                                    String str=new String(receiver.getData()); 
 
                                    String s=str.trim(); 
                                    //System.out.println(s); 
                                    InetAddress addr=receiver.getAddress(); 
                                    int port=receiver.getPort(); 
                                    String ip[]={"165.165.80.80","165.165.79.1"}; 
                                    String name[]={"www.aptitudeguru.com","www.downloadcyclone.blogspot.com"}; 
                                    for(int i=0;i<ip.length;i++) 
                                    { 
                                                if(s.equals(ip[i])) 
                                                { 
                                                            sendbyte=name[i].getBytes(); 
                                                            DatagramPacket sender=new 
DatagramPacket(sendbyte,sendbyte.length,addr,port); 
                                                            server.send(sender); 
                                                            break; 
                                                } 
                                                else if(s.equals(name[i])) 
                                                { 
                                                            sendbyte=ip[i].getBytes(); 
                                                            DatagramPacket sender=new 
DatagramPacket(sendbyte,sendbyte.length,addr,port); 
                                                            server.send(sender); 
                                                            break; 
                                                } 
                                                
                                    }          
                                    break; 
 
 
                        } 
            } 
            catch(Exception e) 
            { 
                        System.out.println(e); 
            } 
            } 
} 
 
 Output 
 
I:\ex>java Serverdns12 
I:\ex>java Clientdns12 
Enter the DOMAIN NAME or IP adress: 
165.165.80.80 
IP address or DOMAIN NAME: www.aptitudeguru.com 
 
I:\ex>java Clientdns12 
Enter the DOMAIN NAME or IP adress: 
www.downloadcyclone.blogspot.com 
IP address or DOMAIN NAME: 165.165.79.1 
 
 
 
 
RESULT: 

Thus domain name requests by the client are resolved into their respective logical address using lookup 
method.
